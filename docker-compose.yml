services:
  db:
    image: mysql:8.0
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_DATABASE: traffic
      # ÌïúÍ∏Ä ÏßÄÏõê ÏÑ§Ï†ï
      LANG: ko_KR.UTF-8
      LC_ALL: ko_KR.UTF-8
      LC_CTYPE: ko_KR.UTF-8
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./django-react-backend-api-ifro/sqldata-backup/20250727:/docker-entrypoint-initdb.d
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --default-authentication-plugin=mysql_native_password --skip-ssl
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./django-react-backend-api-ifro
    container_name: backend
    ports:
      - "8000:8000"
    environment:
      - MYSQL_DATABASE=traffic
      - MYSQL_USER=root
      - MYSQL_PASSWORD=1234
      - MYSQL_HOST=db
      - MYSQL_PORT=3306
      - DJANGO_SECRET_KEY=unsafe-dev-secret-key-for-local-development
      - JWT_SECRET_KEY=a-different-unsafe-secret-key-for-jwt
      - DJANGO_ENCRYPTION_PASSWORD=forBus_password
      - DJANGO_DEBUG=True
      - DJANGO_ALLOWED_HOSTS=localhost,127.0.0.1
      - GEMINI_API_KEY=AIzaSyAwA17afiK3RW95Z9hBcWpDOOVU_PELtfw
      - CHATBOT_URL=http://chatbot:8008
      # ÌïúÍ∏Ä ÏßÄÏõê ÏÑ§Ï†ï
      - LANG=ko_KR.UTF-8
      - LC_ALL=ko_KR.UTF-8
      - LC_CTYPE=ko_KR.UTF-8
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./django-react-backend-api-ifro:/app
    command: >
      sh -c "cd /app/src &&
             echo 'Waiting for MySQL to be ready...' &&
             until mysql -h db -u root -p$$MYSQL_PASSWORD --skip-ssl -e 'SELECT 1;' > /dev/null 2>&1; do
               sleep 1;
             done &&
             echo 'MySQL is ready.' &&
             echo 'Running migrations...' &&
             echo 'Checking Django system tables...' &&
             python manage.py migrate --run-syncdb --verbosity=0 || echo 'Initial migration attempt completed' &&
             python manage.py migrate traffic --verbosity=0 || echo 'Traffic migration attempt completed' &&
             echo 'All migrations completed. Starting services...' &&
             echo '[ENCRYPT] üîÑ encrypt_transfer.py ÏãúÏûëÎê®...' &&
             python ../encrypt_transfer.py &
             ENCRYPT_PID=$$! &&
             echo 'Starting Django server...' &&
             python manage.py runserver 0.0.0.0:8000 &
             wait $$ENCRYPT_PID &&
             echo '[ENCRYPT] ‚úÖ encrypt_transfer.py ÏôÑÎ£åÎê®.' &&
             wait"

  frontend:
    build:
      context: ./django-react-frontend-ifro
    container_name: frontend
    ports:
      - "3000:3000"
    volumes:
      - ./django-react-frontend-ifro:/app
      - /app/node_modules
    environment:
      - NODE_OPTIONS=--max-old-space-size=4096
      - REACT_APP_API_URL=http://localhost:8000
      # ÌïúÍ∏Ä ÏßÄÏõê ÏÑ§Ï†ï
      - LANG=ko_KR.UTF-8
      - LC_ALL=ko_KR.UTF-8
      - LC_CTYPE=ko_KR.UTF-8
    depends_on:
      - backend
    deploy:
      resources:
        limits:
          memory: 4096M
    stdin_open: true
    tty: true

  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
      - ./ollama-entrypoint.sh:/ollama-entrypoint.sh
      - ./ollama-healthcheck.sh:/ollama-healthcheck.sh
    restart: unless-stopped
    environment:
      # ÌïúÍ∏Ä ÏßÄÏõê ÏÑ§Ï†ï
      - LANG=ko_KR.UTF-8
      - LC_ALL=ko_KR.UTF-8
      - LC_CTYPE=ko_KR.UTF-8
    entrypoint: ["/bin/bash", "/ollama-entrypoint.sh"]
    healthcheck:
      test: ["CMD", "/bin/bash", "/ollama-healthcheck.sh"]
      interval: 60s
      timeout: 60s
      retries: 30
      start_period: 1200s


  chatbot:
    build:
      context: ./ollama-LLM-ChatBot
    container_name: chatbot
    ports:
      - "8008:8008"
    volumes:
      - ./ollama-LLM-ChatBot:/app
      - chatbot_vector_store:/app/vector_store
      - chatbot_logs:/app/logs
      - chatbot_models:/app/models
      - sbert_cache:/root/.cache/torch/sentence_transformers
    environment:
      - PYTHONPATH=/app
      - MODEL_TYPE=ollama
      - MODEL_NAME=qwen2:1.5b
      - EMBEDDING_MODEL=jhgan/ko-sroberta-multitask
      - OLLAMA_HOST=http://ollama:11434
      - MYSQL_DATABASE=traffic
      - MYSQL_USER=root
      - MYSQL_PASSWORD=1234
      - MYSQL_HOST=db
      - MYSQL_PORT=3306
      # ÌïúÍ∏Ä ÏßÄÏõê ÏÑ§Ï†ï
      - LANG=ko_KR.UTF-8
      - LC_ALL=ko_KR.UTF-8
      - LC_CTYPE=ko_KR.UTF-8
    depends_on:
      ollama:
        condition: service_healthy
      db:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8008/health"]
      interval: 30s
      timeout: 30s
      retries: 15
      start_period: 300s

volumes:
  mysql_data:
  chatbot_data:
  chatbot_vector_store:
  chatbot_logs:
  chatbot_models:
  sbert_cache:
  ollama_data:

networks:
  default:
    driver: bridge
